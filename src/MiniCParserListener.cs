//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Usuario/IdeaProjects/Gramarr/MiniCParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MiniCParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IMiniCParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] MiniCParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] MiniCParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDecl([NotNull] MiniCParser.ClassDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.classDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDecl([NotNull] MiniCParser.ClassDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassBody([NotNull] MiniCParser.ClassBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassBody([NotNull] MiniCParser.ClassBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.classMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassMember([NotNull] MiniCParser.ClassMemberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.classMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassMember([NotNull] MiniCParser.ClassMemberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDecl([NotNull] MiniCParser.VarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDecl([NotNull] MiniCParser.VarDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDecl([NotNull] MiniCParser.MethodDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.methodDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDecl([NotNull] MiniCParser.MethodDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParamList([NotNull] MiniCParser.ParamListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParamList([NotNull] MiniCParser.ParamListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam([NotNull] MiniCParser.ParamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam([NotNull] MiniCParser.ParamContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] MiniCParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] MiniCParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStmt([NotNull] MiniCParser.StmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.stmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStmt([NotNull] MiniCParser.StmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] MiniCParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] MiniCParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.exprStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprStmt([NotNull] MiniCParser.ExprStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.exprStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprStmt([NotNull] MiniCParser.ExprStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStmt([NotNull] MiniCParser.IfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStmt([NotNull] MiniCParser.IfStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.whileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStmt([NotNull] MiniCParser.WhileStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.whileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStmt([NotNull] MiniCParser.WhileStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStmt([NotNull] MiniCParser.ForStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStmt([NotNull] MiniCParser.ForStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStmt([NotNull] MiniCParser.ReturnStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStmt([NotNull] MiniCParser.ReturnStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.breakStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakStmt([NotNull] MiniCParser.BreakStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.breakStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakStmt([NotNull] MiniCParser.BreakStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.readStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReadStmt([NotNull] MiniCParser.ReadStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.readStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReadStmt([NotNull] MiniCParser.ReadStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.writeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWriteStmt([NotNull] MiniCParser.WriteStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.writeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWriteStmt([NotNull] MiniCParser.WriteStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] MiniCParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] MiniCParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.assignExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignExpr([NotNull] MiniCParser.AssignExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.assignExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignExpr([NotNull] MiniCParser.AssignExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.orExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrExpr([NotNull] MiniCParser.OrExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.orExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrExpr([NotNull] MiniCParser.OrExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.andExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndExpr([NotNull] MiniCParser.AndExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.andExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndExpr([NotNull] MiniCParser.AndExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.eqExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqExpr([NotNull] MiniCParser.EqExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.eqExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqExpr([NotNull] MiniCParser.EqExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.relExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelExpr([NotNull] MiniCParser.RelExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.relExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelExpr([NotNull] MiniCParser.RelExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.addExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddExpr([NotNull] MiniCParser.AddExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.addExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddExpr([NotNull] MiniCParser.AddExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.mulExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulExpr([NotNull] MiniCParser.MulExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.mulExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulExpr([NotNull] MiniCParser.MulExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.unaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpr([NotNull] MiniCParser.UnaryExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.unaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpr([NotNull] MiniCParser.UnaryExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimary([NotNull] MiniCParser.PrimaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimary([NotNull] MiniCParser.PrimaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.location"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLocation([NotNull] MiniCParser.LocationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.location"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLocation([NotNull] MiniCParser.LocationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.methodCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodCall([NotNull] MiniCParser.MethodCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.methodCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodCall([NotNull] MiniCParser.MethodCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.argList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgList([NotNull] MiniCParser.ArgListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.argList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgList([NotNull] MiniCParser.ArgListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] MiniCParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] MiniCParser.LiteralContext context);
}
