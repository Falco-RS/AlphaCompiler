//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/Usuario/IdeaProjects/Gramarr/MiniCParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IMiniCParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class MiniCParserBaseListener : IMiniCParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] MiniCParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] MiniCParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.classDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDecl([NotNull] MiniCParser.ClassDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.classDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDecl([NotNull] MiniCParser.ClassDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.classBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassBody([NotNull] MiniCParser.ClassBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.classBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassBody([NotNull] MiniCParser.ClassBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.classMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassMember([NotNull] MiniCParser.ClassMemberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.classMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassMember([NotNull] MiniCParser.ClassMemberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDecl([NotNull] MiniCParser.VarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDecl([NotNull] MiniCParser.VarDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDecl([NotNull] MiniCParser.MethodDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.methodDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDecl([NotNull] MiniCParser.MethodDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParamList([NotNull] MiniCParser.ParamListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParamList([NotNull] MiniCParser.ParamListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParam([NotNull] MiniCParser.ParamContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParam([NotNull] MiniCParser.ParamContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] MiniCParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] MiniCParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt([NotNull] MiniCParser.StmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt([NotNull] MiniCParser.StmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] MiniCParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] MiniCParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.exprStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprStmt([NotNull] MiniCParser.ExprStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.exprStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprStmt([NotNull] MiniCParser.ExprStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.ifStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStmt([NotNull] MiniCParser.IfStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.ifStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStmt([NotNull] MiniCParser.IfStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.whileStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStmt([NotNull] MiniCParser.WhileStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.whileStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStmt([NotNull] MiniCParser.WhileStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.forStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForStmt([NotNull] MiniCParser.ForStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.forStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForStmt([NotNull] MiniCParser.ForStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStmt([NotNull] MiniCParser.ReturnStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStmt([NotNull] MiniCParser.ReturnStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.breakStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakStmt([NotNull] MiniCParser.BreakStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.breakStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakStmt([NotNull] MiniCParser.BreakStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.readStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReadStmt([NotNull] MiniCParser.ReadStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.readStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReadStmt([NotNull] MiniCParser.ReadStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.writeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWriteStmt([NotNull] MiniCParser.WriteStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.writeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWriteStmt([NotNull] MiniCParser.WriteStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] MiniCParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] MiniCParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.assignExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignExpr([NotNull] MiniCParser.AssignExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.assignExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignExpr([NotNull] MiniCParser.AssignExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.orExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrExpr([NotNull] MiniCParser.OrExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.orExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrExpr([NotNull] MiniCParser.OrExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.andExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndExpr([NotNull] MiniCParser.AndExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.andExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndExpr([NotNull] MiniCParser.AndExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.eqExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqExpr([NotNull] MiniCParser.EqExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.eqExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqExpr([NotNull] MiniCParser.EqExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.relExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelExpr([NotNull] MiniCParser.RelExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.relExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelExpr([NotNull] MiniCParser.RelExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.addExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddExpr([NotNull] MiniCParser.AddExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.addExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddExpr([NotNull] MiniCParser.AddExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.mulExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMulExpr([NotNull] MiniCParser.MulExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.mulExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMulExpr([NotNull] MiniCParser.MulExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.unaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpr([NotNull] MiniCParser.UnaryExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.unaryExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpr([NotNull] MiniCParser.UnaryExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary([NotNull] MiniCParser.PrimaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary([NotNull] MiniCParser.PrimaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.location"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocation([NotNull] MiniCParser.LocationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.location"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocation([NotNull] MiniCParser.LocationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.methodCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodCall([NotNull] MiniCParser.MethodCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.methodCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodCall([NotNull] MiniCParser.MethodCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgList([NotNull] MiniCParser.ArgListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgList([NotNull] MiniCParser.ArgListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniCParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] MiniCParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniCParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] MiniCParser.LiteralContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
